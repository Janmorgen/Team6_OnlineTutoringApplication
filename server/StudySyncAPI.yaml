---
openapi: 3.0.0
info:
  title: StudySync API
  description: This is a simple API
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/DIANALE201490/StudySyncAPI/1.0.0
  description: StuddySync API Auto Mocking
- url: https://randomurl.com
  description: Stand in URL until host is created
tags:
- name: Appointments
  description: Modify appointments
- name: Tutor Profile
  description: Modify tutor profiles
- name: Student Profile
  description: Modify student profiles
- name: Availability
  description: Modify user availability
paths:
  /appointments/{userId}:
    get:
      tags:
      - Appointments
      summary: Gets all appointments by userId
      description: Finds all appointments in system with user ID
      operationId: searchAppointmentByUser
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        "400":
          description: bad input parameter
  /appointments/{appointmentId}:
    get:
      tags:
      - Appointments
      summary: Gets a an appointment by ID
      description: |
        By passing in a valid ID, you can search for
        available appointment in the system
      operationId: searchAppointment
      parameters:
      - name: appointmentId
        in: path
        description: Appointment ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        "400":
          description: bad input parameter
    put:
      tags:
      - Appointments
      summary: Update an appointment by ID
      description: |
        Update the appointment by time, date, location, online, etc
      parameters:
      - name: appointmentId
        in: path
        description: Appointment ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        "400":
          description: bad input parameter
    delete:
      tags:
      - Appointments
      summary: Delete an appointment by ID
      description: |
        Delete the appointment
      parameters:
      - name: appointmentId
        in: path
        description: Appointment ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        "400":
          description: bad input parameter
  /appointments:
    post:
      tags:
      - Appointments
      summary: adds a new appointment
      description: Adds an appointment to the system
      operationId: addAppointment
      requestBody:
        description: Appointment item to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Appointment'
      responses:
        "201":
          description: appointment created
        "400":
          description: "invalid input, object invalid"
        "409":
          description: an existing appointment with this ID already exists
  /appointments/review/{appointmentId}:
    post:
      tags:
      - Appointments
      summary: adds review to appointment id
      description: Add a review to the appointment
      parameters:
      - name: appointmentId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Review'
      requestBody:
        description: Appointment review to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Review'
      responses:
        "201":
          description: appointment review created
        "400":
          description: "invalid input, object invalid"
        "409":
          description: a review for this appointment ID already exists
  /user/{userId}:
    get:
      tags:
      - Users
      summary: Gets profile by userId
      description: Finds user profile by id
      operationId: searchUserProfile
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
    put:
      tags:
      - Users
      summary: Update a user by ID
      description: |
        Update the account related to user ID
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
    delete:
      tags:
      - Users
      summary: Delete a user by ID
      description: |
        Delete the account related to user ID
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "400":
          description: bad input parameter
  /user:
    post:
      tags:
      - Users
      summary: adds a new user
      description: Adds a new user to the system
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      responses:
        "201":
          description: user account created
        "400":
          description: "invalid input, object invalid"
  /user/availability/{userId}:
    get:
      tags:
      - Availability
      summary: Gets availability for the user
      description: Finds user profile by id
      operationId: searchUserAvailability
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
        "400":
          description: bad input parameter
    put:
      tags:
      - Availability
      summary: Update availability by ID
      description: |
        Update the availability related to user ID
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
        "400":
          description: bad input parameter
    post:
      tags:
      - Availability
      summary: adds a new availability
      description: Adds an availability for user to the system
      operationId: addUserAvailability
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Availability'
      responses:
        "201":
          description: availability created
        "400":
          description: "invalid input, object invalid"
    delete:
      tags:
      - Availability
      summary: Delete availability by user ID
      description: |
        Delete the availability linked to user ID
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Availability'
        "400":
          description: bad input parameter
components:
  schemas:
    Appointment:
      type: object
      properties:
        appointmentId:
          type: string
        userID:
          type: string
          example: A123456
        tutorId:
          type: string
          example: T123456
        date-time:
          type: string
          format: date-time
        length:
          type: integer
        online:
          type: integer
          nullable: true
        location:
          type: string
        notes:
          type: string
        rating:
          type: integer
    User:
      type: object
      properties:
        userId:
          type: string
        major:
          type: string
        courses:
          type: array
          items:
            type: string
        phone:
          type: string
        email:
          type: string
          format: email
        longBio:
          type: string
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        middleName:
          type: string
        password:
          type: string
        rating:
          type: number
          format: float
          example: 4.35
    Availability:
      type: object
      properties:
        tutorId:
          type: string
        weekly:
          type: array
          items:
            type: string
        exceptions:
          type: array
          items:
            type: string
    Review:
      type: object
      properties:
        rate:
          type: integer
        description:
          type: string
